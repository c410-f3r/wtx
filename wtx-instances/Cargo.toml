# Fulfillment Binaries

[[bin]]
name = "autobahn-client"
path = "src/bin/autobahn-client.rs"
required-features = ["autobahn-client"]

[[bin]]
name = "autobahn-server"
path = "src/bin/autobahn-server.rs"
required-features = ["autobahn-server"]

[[bin]]
name = "h2load"
path = "src/bin/h2load.rs"
required-features = ["h2load"]

[[bin]]
name = "h2spec-high-server"
path = "src/bin/h2spec-high-server.rs"
required-features = ["h2spec-high-server"]

[[bin]]
name = "h2spec-low-server"
path = "src/bin/h2spec-low-server.rs"
required-features = ["h2spec-low-server"]

# Database Examples

[[example]]
name = "database-client-mysql"
path = "database-examples/database-client-mysql.rs"
required-features = ["database-client-mysql"]

[[example]]
name = "database-client-postgres"
path = "database-examples/database-client-postgres.rs"
required-features = ["database-client-postgres"]

[[example]]
name = "database-client-postgres-composite-type"
path = "database-examples/database-client-postgres-composite-type.rs"
required-features = ["database-client-postgres-composite-type"]

[[example]]
name = "database-client-postgres-enum"
path = "database-examples/database-client-postgres-enum.rs"
required-features = ["database-client-postgres-enum"]

# Generic Examples

[[example]]
name = "calendar"
path = "generic-examples/calendar.rs"
required-features = ["calendar"]

[[example]]
name = "client-api-framework"
path = "generic-examples/client-api-framework.rs"
required-features = ["client-api-framework"]

[[example]]
name = "grpc-client"
path = "generic-examples/grpc-client.rs"
required-features = ["grpc-client"]

[[example]]
name = "grpc-server"
path = "generic-examples/grpc-server.rs"
required-features = ["grpc-server"]

[[example]]
name = "http-client-pool"
path = "generic-examples/http-client-pool.rs"
required-features = ["http-client-pool"]

[[example]]
name = "pool"
path = "generic-examples/pool.rs"
required-features = ["pool"]

# HTTP Server Framework Examples

[[example]]
name = "http-server-framework"
path = "http-server-framework-examples/http-server-framework.rs"
required-features = ["http-server-framework"]

[[example]]
name = "http-server-framework-cors"
path = "http-server-framework-examples/http-server-framework-cors.rs"
required-features = ["http-server-framework-cors"]

[[example]]
name = "http-server-framework-redirect"
path = "http-server-framework-examples/http-server-framework-redirect.rs"
required-features = ["http-server-framework-redirect"]

[[example]]
name = "http-server-framework-session"
path = "http-server-framework-examples/http-server-framework-session.rs"
required-features = ["http-server-framework-session"]

# HTTP/2 Examples

[[example]]
name = "http2-client"
path = "http2-examples/http2-client.rs"
required-features = ["http2-client"]

[[example]]
name = "http2-server"
path = "http2-examples/http2-server.rs"
required-features = ["http2-server"]

# WebSocket Examples

[[example]]
name = "web-socket-client"
path = "web-socket-examples/web-socket-client.rs"
required-features = ["web-socket-client"]

[[example]]
name = "web-socket-client-concurrent"
path = "web-socket-examples/web-socket-client-concurrent.rs"
required-features = ["web-socket-client-concurrent"]

[[example]]
name = "web-socket-server"
path = "web-socket-examples/web-socket-server.rs"
required-features = ["web-socket-server"]

[build-dependencies]
pb-rs = { default-features = false, optional = true, version = "0.10" }

[dependencies]
quick-protobuf = { default-features = false, optional = true, version = "0.8" }
serde = { default-features = false, optional = true, version = "1.0" }
serde_json = { default-features = false, features = ["alloc"], optional = true, version = "1.0" }
tokio = { default-features = false, features = ["io-std", "macros", "net", "rt-multi-thread"], version = "1.0" }
tokio-rustls = { default-features = false, optional = true, version = "0.26" }
wtx = { default-features = false, features = ["tokio"], path = "../wtx" }
wtx-macros = { default-features = false, optional = true, path = "../wtx-macros" }

[features]
autobahn-client = ["wtx/flate2", "wtx/web-socket-handshake"]
autobahn-server = ["wtx/flate2", "wtx/nightly", "wtx/pool", "wtx/web-socket-handshake"]
h2load = ["wtx/http2", "wtx/nightly"]
h2spec-high-server = ["wtx/http2", "wtx/nightly"]
h2spec-low-server = ["wtx/http2"]

database-client-mysql = ["mysql"]
database-client-postgres = ["postgres"]
database-client-postgres-composite-type = ["postgres"]
database-client-postgres-enum = ["postgres"]

calendar = ["wtx/calendar"]
client-api-framework = ["serde", "wtx/client-api-framework", "wtx/http-client-pool", "wtx/serde_json", "wtx/web-socket-handshake", "wtx-macros"]
grpc-client = ["grpc", "wtx/grpc-client"]
grpc-server = ["grpc", "wtx/grpc-server", "wtx/nightly"]
http-client-pool = ["wtx/http-client-pool"]
pool = ["wtx/pool"]

http-server-framework = ["serde", "wtx/getrandom", "wtx/http-server-framework", "wtx/nightly", "wtx/pool", "wtx/postgres", "wtx/serde_json"]
http-server-framework-cors = ["wtx/http-server-framework", "wtx/nightly"]
http-server-framework-redirect = ["wtx/http-server-framework", "wtx/nightly"]
http-server-framework-session = ["serde", "serde_json", "wtx/argon2", "wtx/getrandom", "wtx/http-server-framework", "wtx/http-session", "wtx/nightly", "wtx/pool", "wtx/postgres", "wtx-macros"]

http2-client = ["wtx/http2"]
http2-server = ["tokio-rustls", "wtx/http2", "wtx/nightly", "wtx/web-socket"]

web-socket-client = ["wtx/web-socket-handshake"]
web-socket-client-concurrent = ["tokio-rustls", "wtx/web-socket-handshake", "wtx/webpki-roots"]
web-socket-server = ["tokio-rustls", "wtx/pool", "wtx/web-socket-handshake"]

grpc = ["pb-rs", "quick-protobuf", "wtx/grpc", "wtx/quick-protobuf"]
mysql = ["wtx/getrandom", "wtx/mysql"]
postgres = ["wtx/getrandom", "wtx/postgres"]
tokio-rustls = ["dep:tokio-rustls", "wtx/tokio-rustls"]

[package]
edition = "2024"
name = "wtx-instances"
publish = false
rust-version = "1.87"
version = "0.0.0"
