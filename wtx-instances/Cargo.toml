# Fulfillment Binaries

[[bin]]
name = "autobahn-client"
path = "src/bin/autobahn-client.rs"
required-features = ["wtx/flate2", "wtx/web-socket-handshake"]

[[bin]]
name = "autobahn-server"
path = "src/bin/autobahn-server.rs"
required-features = ["wtx/flate2", "wtx/nightly", "wtx/pool", "wtx/web-socket-handshake"]

[[bin]]
name = "h2load"
path = "src/bin/h2load.rs"
required-features = ["wtx/http2", "wtx/nightly"]

[[bin]]
name = "h2spec-high-server"
path = "src/bin/h2spec-high-server.rs"
required-features = ["wtx/http2", "wtx/nightly"]

[[bin]]
name = "h2spec-low-server"
path = "src/bin/h2spec-low-server.rs"
required-features = ["wtx/http2", "wtx/nightly"]

# Database Examples

[[example]]
name = "database-client-mysql"
path = "database-examples/database-client-mysql.rs"
required-features = ["mysql"]

[[example]]
name = "database-client-postgres"
path = "database-examples/database-client-postgres.rs"
required-features = ["wtx/postgres"]

[[example]]
name = "database-client-postgres-composite-type"
path = "database-examples/database-client-postgres-composite-type.rs"
required-features = ["wtx/postgres"]

[[example]]
name = "database-client-postgres-enum"
path = "database-examples/database-client-postgres-enum.rs"
required-features = ["wtx/postgres"]

# Generic Examples

[[example]]
name = "client-api-framework"
path = "generic-examples/client-api-framework.rs"
required-features = ["wtx/client-api-framework", "wtx/http-client-pool", "wtx/serde_json", "wtx/web-socket-handshake", "wtx-macros"]

[[example]]
name = "grpc-client"
path = "generic-examples/grpc-client.rs"
required-features = ["wtx/grpc-client"]

[[example]]
name = "grpc-server"
path = "generic-examples/grpc-server.rs"
required-features = ["wtx/grpc-server", "wtx/tokio-rustls"]

[[example]]
name = "http-client-pool"
path = "generic-examples/http-client-pool.rs"
required-features = ["wtx/http-client-pool"]

[[example]]
name = "pool"
path = "generic-examples/pool.rs"
required-features = ["wtx/pool"]

# HTTP Server Framework Examples

[[example]]
name = "http-server-framework"
path = "http-server-framework-examples/http-server-framework.rs"
required-features = ["serde", "wtx/http-server-framework", "wtx/matchit", "wtx/pool", "wtx/postgres", "wtx/serde_json"]

[[example]]
name = "http-server-framework-cors"
path = "http-server-framework-examples/http-server-framework-cors.rs"
required-features = ["wtx/http-server-framework"]

[[example]]
name = "http-server-framework-redirect"
path = "http-server-framework-examples/http-server-framework-redirect.rs"
required-features = ["wtx/http-server-framework"]

[[example]]
name = "http-server-framework-session"
path = "http-server-framework-examples/http-server-framework-session.rs"
required-features = ["rand_chacha", "serde", "serde_json", "wtx/argon2", "wtx/http-server-framework", "wtx/http-session", "wtx/pool", "wtx/postgres", "wtx/rand_chacha", "wtx-macros"]

# HTTP/2 Examples

[[example]]
name = "http2-client"
path = "http2-examples/http2-client.rs"
required-features = ["wtx/http2"]

[[example]]
name = "http2-server"
path = "http2-examples/http2-server.rs"
required-features = ["wtx/http2", "wtx/tokio-rustls", "wtx/web-socket"]

[[example]]
name = "http2-server-web-socket"
path = "http2-examples/http2-server-web-socket.rs"
required-features = ["wtx/http2", "wtx/tokio-rustls", "wtx/web-socket"]

# WebSocket Examples

[[example]]
name = "web-socket-client"
path = "web-socket-examples/web-socket-client.rs"
required-features = ["wtx/web-socket-handshake"]

[[example]]
name = "web-socket-client-concurrent"
path = "web-socket-examples/web-socket-client-concurrent.rs"
required-features = ["wtx/tokio-rustls", "wtx/web-socket-handshake", "wtx/webpki-roots"]

[[example]]
name = "web-socket-server"
path = "web-socket-examples/web-socket-server.rs"
required-features = ["tokio-rustls", "wtx/pool", "wtx/tokio-rustls", "wtx/web-socket-handshake"]

[build-dependencies]
pb-rs = { default-features = false, optional = true, version = "0.10" }

[dependencies]
quick-protobuf = { default-features = false, optional = true, version = "0.8" }
rand_chacha = { default-features = false, features = ["os_rng"], optional = true, version = "0.9" }
serde = { default-features = false, optional = true, version = "1.0" }
serde_json = { default-features = false, features = ["alloc"], optional = true, version = "1.0" }
tokio = { default-features = false, features = ["io-std", "macros", "net", "rt-multi-thread"], version = "1.0" }
tokio-rustls = { default-features = false, optional = true, version = "0.26" }
wtx = { default-features = false, features = ["tokio"], path = "../wtx" }
wtx-macros = { default-features = false, optional = true, path = "../wtx-macros" }

[features]
grpc = ["pb-rs", "quick-protobuf", "wtx/grpc", "wtx/quick-protobuf"]
mysql = ["rand_chacha", "wtx/mysql"]
postgres = ["rand_chacha", "wtx/getrandom", "wtx/postgres"]
rand_chacha = ["dep:rand_chacha", "wtx/rand_chacha"]

[package]
edition = "2024"
name = "wtx-instances"
publish = false
version = "0.0.0"
