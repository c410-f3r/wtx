[dependencies]
aes-gcm = { default-features = false, optional = true, version = "0.11.0-pre.2" }
arbitrary = { default-features = false, features = ["derive_arbitrary"], optional = true, version = "1.0" }
argon2 = { default-features = false, optional = true, version = "0.5" }
base64 = { default-features = false, features = ["alloc"], optional = true, version = "0.22" }
borsh = { default-features = false, features = ["derive"], optional = true, version = "1.0" }
chrono = { default-features = false, optional = true, version = "0.4" }
cl-aux = { default-features = false, optional = true, features = ["alloc"], version = "5.0" }
crypto-common = { default-features = false, optional = true, version = "0.1" }
digest = { default-features = false, features = ["mac"], optional = true, version = "0.10" }
fastrand = { default-features = false, optional = true, version = "2.0" }
flate2 = { default-features = false, features = ["zlib-rs"], optional = true, version = "1.0" }
foldhash = { default-features = false, optional = true, version = "0.1" }
hashbrown = { default-features = false, features = ["inline-more"], optional = true, version = "0.15" }
hmac = { default-features = false, optional = true, version = "0.12" }
httparse = { default-features = false, optional = true, version = "1.0" }
matchit = { default-features = false, optional = true, version = "0.8" }
memchr = { default-features = false, optional = true, version = "2.0" }
quick-protobuf = { default-features = false, optional = true, version = "0.8" }
rand_chacha = { default-features = false, optional = true, version = "0.3" }
rand_core = { default-features = false, optional = true, version = "0.6" }
ring = { default-features = false, optional = true, version = "0.17" }
rust_decimal = { default-features = false, features = ["maths"], optional = true, version = "1.0" }
rustls-pemfile = { default-features = false, optional = true, version = "2.0" }
rustls-pki-types = { default-features = false, optional = true, version = "1.0" }
serde = { default-features = false, features = ["alloc", "derive"], optional = true, version = "1.0" }
serde_json = { default-features = false, features = ["alloc"], optional = true, version = "1.0" }
sha1 = { default-features = false, optional = true, version = "0.10" }
sha2 = { default-features = false, optional = true, version = "0.10" }
simdutf8 = { default-features = false, features = ["aarch64_neon"], optional = true, version = "0.1" }
tokio = { default-features = false, features = ["io-util", "net", "rt", "sync", "time"], optional = true, version = "1.0" }
tokio-rustls = { default-features = false, features = ["ring"], optional = true, version = "0.26" }
tracing = { default-features = false, features = ["attributes"], optional = true, version = "0.1" }
tracing-subscriber = { default-features = false, features = ["env-filter", "fmt"], optional = true, version = "0.3" }
tracing-tree = { default-features = false, optional = true, version = "0.4" }
webpki-roots = { default-features = false, optional = true, version = "0.26" }
x509-certificate = { default-features = false, optional = true, version = "0.23" }

[features]
arbitrary = ["dep:arbitrary", "std"]
base64 = ["dep:base64"]
borsh = ["dep:borsh", "std"]
chrono = ["dep:chrono"]
cl-aux = ["dep:cl-aux"]
client-api-framework = ["data-transformation"]
crypto-common = ["dep:crypto-common"]
data-transformation = []
database = []
default = []
digest = ["dep:digest"]
executor = []
fastrand = ["dep:fastrand"]
flate2 = ["dep:flate2"]
foldhash = ["dep:foldhash", "hashbrown?/default-hasher"]
grpc = ["data-transformation", "http-client-framework", "http-server-framework"]
hashbrown = ["dep:hashbrown"]
hmac = ["dep:hmac"]
http = []
http-client-framework = ["http2", "pool", "std"]
http-cookie = ["chrono/alloc", "http"]
http-cookie-secure = ["aes-gcm/aes", "aes-gcm/alloc", "base64", "digest", "http-cookie"]
http-server-framework = ["http2", "tokio"]
http-session = ["chrono/serde", "http-cookie-secure", "serde_json"]
http2 = ["foldhash", "hashbrown", "http"]
httparse = ["dep:httparse"]
memchr = ["dep:memchr"]
nightly = ["hashbrown?/nightly"]
optimization = ["memchr", "simdutf8"]
pool = []
postgres = ["base64", "crypto-common", "database", "digest", "foldhash", "hashbrown", "hmac", "sha2"]
quick-protobuf = ["dep:quick-protobuf", "std"]
rand_chacha = ["dep:rand_chacha", "dep:rand_core"]
ring = ["dep:ring"]
rust_decimal = ["dep:rust_decimal"]
schema-manager = ["database", "chrono"]
schema-manager-dev = ["schema-manager"]
serde = ["cl-aux?/serde", "dep:serde"]
serde_json = ["serde", "dep:serde_json", "std"]
sha1 = ["dep:sha1"]
sha2 = ["dep:sha2"]
simdutf8 = ["dep:simdutf8"]
std = ["aes-gcm?/std", "argon2?/std", "base64?/std", "borsh?/std", "chrono?/std", "cl-aux?/std", "crypto-common?/std", "digest?/std", "fastrand?/std", "foldhash?/std", "hmac?/std", "httparse?/std", "memchr?/std", "quick-protobuf?/std", "rand_chacha?/std", "rand_core?/std", "ring?/std", "rust_decimal?/std", "rustls-pemfile?/std", "rustls-pki-types?/std", "serde?/std", "serde_json?/std", "sha1?/std", "sha2?/std", "simdutf8?/std", "tracing?/std", "tracing-subscriber?/std"]
tokio = ["std", "dep:tokio"]
tokio-rustls = ["ring", "dep:rustls-pemfile", "dep:rustls-pki-types", "tokio", "dep:tokio-rustls"]
tracing = ["dep:tracing"]
tracing-subscriber = ["dep:tracing-subscriber"]
web-socket = ["http"]
web-socket-handshake = ["base64", "httparse", "sha1", "web-socket"]
webpki-roots = ["dep:webpki-roots"]
x509-certificate = ["dep:x509-certificate"]

_async-tests = ["tokio/macros", "tokio/net", "tokio/rt-multi-thread", "tokio/time"]
_bench = []
_integration-tests = ["serde_json?/raw_value"]
_tracing-tree = ["tracing", "tracing-subscriber", "dep:tracing-tree"]

[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(kani)'] }

[package]
authors = ["Caio Fernandes <c410.f3r@gmail.com>"]
categories = ["asynchronous", "database", "network-programming", "no-std", "web-programming"]
description = "A collection of different transport implementations and related tools focused primarily on web technologies."
documentation = "https://docs.rs/wtx"
edition = "2021"
exclude = ["tests"]
homepage = "https://c410-f3r.github.io/wtx"
keywords = ["api", "database", "http", "network", "websocket"]
license = "Apache-2.0"
name = "wtx"
readme = "README.md"
repository = "https://github.com/c410-f3r/wtx"
rust-version = "1.82"
version = "0.23.0"

[package.metadata.docs.rs]
all-features = true
