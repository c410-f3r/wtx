[[bin]]
name = "autobahn-client"
path = "src/bin/autobahn-client.rs"
required-features = ["flate2", "optimization", "parking_lot", "tokio/rt-multi-thread", "web-socket-handshake"]

[[bin]]
name = "autobahn-server"
path = "src/bin/autobahn-server.rs"
required-features = ["async-send", "flate2", "optimization", "parking_lot", "pool", "tokio/rt-multi-thread", "web-socket-handshake"]

[[example]]
name = "database-client-postgres-tokio-rustls"
path = "examples/database-client-postgres-tokio-rustls.rs"
required-features = ["_tokio-rustls-client", "postgres"]

[[example]]
name = "http2-client-tokio"
path = "examples/http2-client-tokio.rs"
required-features = ["http2", "tokio"]

[[example]]
name = "http2-server-tokio"
path = "examples/http2-server-tokio.rs"
required-features = ["async-send", "http2", "pool", "tokio"]

[[example]]
name = "web-socket-client-raw-tokio-rustls"
path = "examples/web-socket-client-raw-tokio-rustls.rs"
required-features = ["_tokio-rustls-client", "tokio/io-std", "web-socket-handshake"]

[[example]]
name = "web-socket-server-raw-tokio-rustls"
path = "examples/web-socket-server-raw-tokio-rustls.rs"
required-features = ["_tokio-rustls-server", "web-socket-handshake"]

[dependencies]
ahash = { default-features = false, features = ["no-rng"], optional = true, version = "0.8" }
arbitrary = { default-features = false, features = ["derive_arbitrary"], optional = true, version = "1.0" }
async-std = { default-features = false, features = ["default"], optional = true, version = "1.0" }
atoi = { default-features = false, optional = true, version = "2.0" }
base64 = { default-features = false, features = ["alloc"], optional = true, version = "0.22" }
borsh = { default-features = false, features = ["derive", "std"], optional = true, version = "1.4" }
bytes = { default-features = false, optional = true, version = "1.0" }
chrono = { default-features = false, optional = true, version = "0.4" }
cl-aux = { default-features = false, optional = true, features = ["alloc"], version = "4.0" }
crypto-common = { default-features = false, optional = true, version = "0.1" }
digest = { default-features = false, features = ["mac"], optional = true, version = "0.10" }
embassy-net = { default-features = false, features = ["tcp"], optional = true, version = "0.4" }
embassy-sync = { default-features = false, optional = true, version = "0.6" }
embedded-io-async = { default-features = false, optional = true, version = "0.6" }
embedded-tls = { default-features = false, features = ["async"], optional = true, version = "0.16" }
fastrand = { default-features = false, optional = true, version = "2.0" }
flate2 = { default-features = false, features = ["zlib-ng"], optional = true, version = "1.0" }
futures-lite = { default-features = false, optional = true, version = "1.0" }
glommio = { default-features = false, optional = true, version = "0.9" }
hashbrown = { default-features = false, features = ["ahash", "allocator-api2", "inline-more"], optional = true, version = "0.14" }
hmac = { default-features = false, optional = true, version = "0.12" }
httparse = { default-features = false, optional = true, version = "1.9" }
memchr = { default-features = false, optional = true, version = "2.7" }
miniserde = { default-features = false, optional = true, version = "0.1" }
parking_lot = { default-features = false, optional = true, version = "0.12" }
proptest = { default-features = false, features = ["alloc"], optional = true, version = "1.0" }
protobuf = { default-features = false, optional = true, version = "3.4" }
rand = { default-features = false, features = ["small_rng"], optional = true, version = "0.8" }
ring = { default-features = false, optional = true, version = "0.17" }
rkyv = { default-features = false, features = ["validation"], optional = true, version = "0.7" }
rust_decimal = { default-features = false, features = ["maths"], optional = true, version = "1.34" }
rustls-pemfile = { default-features = false, features = ["std"], optional = true, version = "2.1" }
rustls-pki-types = { default-features = false, optional = true, version = "1.4" }
serde = { default-features = false, features = ["alloc", "derive"], optional = true, version = "1.0" }
serde_json = { default-features = false, features = ["alloc"], optional = true, version = "1.0" }
serde_yaml = { default-features = false, optional = true, version = "0.9" }
serde-xml-rs = { default-features = false, optional = true, version = "0.6" }
sha1 = { default-features = false, optional = true, version = "0.10" }
sha2 = { default-features = false, optional = true, version = "0.10" }
simd-json = { default-features = false, features = ["serde_impl"], optional = true, version = "0.11" }
simdutf8 = { default-features = false, features = ["aarch64_neon"], optional = true, version = "0.1" }
smallvec = { default-features = false, features = ["const_generics", "union"], optional = true, version = "1.13" }
smol = { default-features = false, optional = true, version = "2.0" }
smoltcp = { default-features = false, optional = true, version = "0.11" }
test-strategy = { default-features = false, optional = true, version = "0.3" }
tokio = { default-features = false, features = ["io-util", "net", "rt", "sync", "time"], optional = true, version = "1.38" }
tokio-rustls = { default-features = false, features = ["ring"], optional = true, version = "0.26" }
tracing = { default-features = false, features = ["attributes"], optional = true, version = "0.1" }
tracing-subscriber = { default-features = false, features = ["env-filter", "fmt"], optional = true, version = "0.3" }
tracing-tree = { default-features = false, optional = true, version = "0.3" }
webpki-roots = { default-features = false, optional = true, version = "0.26" }
x509-certificate = { default-features = false, optional = true, version = "0.23" }

[dev-dependencies]
chrono = { default-features = false, features = ["clock"], version = "0.4" }
tokio = { default-features = false, features = ["macros", "net", "rt-multi-thread", "time"], version = "1.38" }

[features]
ahash = ["dep:ahash", "hashbrown?/ahash"]
arbitrary = ["dep:arbitrary", "std"]
async-send = ["parking_lot?/send_guard"]
async-std = ["dep:async-std", "std"]
borsh = ["dep:borsh", "std"]
client-api-framework = ["cl-aux"]
database = []
default = []
embedded-tls = ["dep:embedded-io-async", "dep:embedded-tls"]
glommio = ["futures-lite", "dep:glommio", "std"]
http1 = ["httparse"]
http2 = ["ahash", "hashbrown", "tokio"]
miniserde = ["dep:miniserde", "std"]
optimization = ["atoi", "memchr", "simdutf8"]
orm = ["database", "dep:smallvec"]
pool = []
postgres = ["ahash", "base64", "crypto-common", "database", "digest", "hashbrown", "hmac", "sha2"]
protobuf = ["dep:protobuf", "std"]
schema-manager = ["database", "chrono"]
schema-manager-dev = ["schema-manager"]
serde = ["cl-aux?/serde", "dep:serde"]
serde_json = ["serde", "dep:serde_json", "std"]
serde_yaml = ["serde", "dep:serde_yaml", "std"]
serde-xml-rs = ["serde", "dep:serde-xml-rs", "std"]
simd-json = ["serde", "dep:simd-json", "std"]
smol = ["dep:smol", "std"]
std = ["ahash?/std", "atoi?/std", "cl-aux?/std", "embassy-sync?/std", "memchr?/std", "miniserde?/std", "serde?/std", "serde_json?/std", "simdutf8?/std"]
test-strategy = ["dep:test-strategy", "proptest"]
tokio = ["std", "dep:tokio"]
tokio-rustls = ["ring", "rustls-pki-types", "tokio", "dep:tokio-rustls"]
web-socket = []
web-socket-handshake = ["base64", "http1", "sha1", "web-socket"]

_bench = []
# It is not up to this crate to decide what downstream should use
_hack = ["embassy-net?/medium-ip", "embassy-net?/proto-ipv4", "rkyv?/size_32", "simd-json?/allow-non-simd", "smoltcp?/medium-ip", "smoltcp?/proto-ipv4", "smoltcp?/socket-tcp"]
_integration-tests = ["serde_json?/raw_value"]
_proptest = ["proptest/std", "rust_decimal?/proptest", "std", "test-strategy"]
_tokio-rustls-client = ["rustls-pemfile", "tokio-rustls/tls12", "webpki-roots"]
_tokio-rustls-server = ["rustls-pemfile", "tokio-rustls"]
_tracing-subscriber = ["tracing", "dep:tracing-subscriber", "dep:tracing-tree"]

[package]
authors = ["Caio Fernandes <c410.f3r@gmail.com>"]
categories = ["asynchronous", "database", "network-programming", "no-std", "web-programming"]
description = "A collection of different transport implementations and related tools focused primarily on web technologies."
documentation = "https://docs.rs/wtx"
edition = "2021"
exclude = ["Cargo.lock", "examples", "README.md", "src/bin", "tests"]
homepage = "https://c410-f3r.github.io/wtx"
keywords = ["api", "database", "http", "network", "websocket"]
license = "Apache-2.0"
name = "wtx"
readme = "README.md"
repository = "https://github.com/c410-f3r/wtx"
version = "0.14.0"

[package.metadata.docs.rs]
all-features = true
