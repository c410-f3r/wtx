[dependencies]
arbitrary = { default-features = false, features = ["derive_arbitrary"], optional = true, version = "1.0" }
base64 = { default-features = false, features = ["alloc"], optional = true, version = "0.22" }
borsh = { default-features = false, features = ["derive"], optional = true, version = "1.0" }
crossbeam-channel = { default-features = false, optional = true, version = "0.5" }
embassy-net = { default-features = false, features = ["tcp"], optional = true, version = "0.5" }
embassy-time = { default-features = false, optional = true, version = "0.3" }
fastrand = { default-features = false, optional = true, version = "2.0" }
flate2 = { default-features = false, features = ["zlib-rs"], optional = true, version = "1.0" }
foldhash = { default-features = false, optional = true, version = "0.1" }
getrandom = { default-features = false, optional = true, version = "0.3" }
hashbrown = { default-features = false, features = ["default-hasher", "inline-more"], optional = true, version = "0.15" }
httparse = { default-features = false, optional = true, version = "1.0" }
libc = { default-features = false, optional = true, version = "0.2" }
loom = { default-features = false, optional = true, version = "0.7" }
matchit = { default-features = false, optional = true, version = "0.8" }
memchr = { default-features = false, optional = true, version = "2.0" }
parking_lot = { default-features = false, optional = true, version = "0.12" }
portable-atomic = { default-features = false, features = ["fallback"], optional = true, version = "1.0" }
portable-atomic-util = { default-features = false, features = ["alloc"], optional = true, version = "0.2" }
quick-protobuf = { default-features = false, optional = true, version = "0.8" }
rand_chacha = { default-features = false, optional = true, version = "0.9" }
rand_core = { default-features = false, optional = true, version = "0.9" }
ring = { default-features = false, optional = true, version = "0.17" }
rust_decimal = { default-features = false, features = ["maths"], optional = true, version = "1.0" }
rustls = { default-features = false, optional = true, version = "0.23" }
rustls-pemfile = { default-features = false, optional = true, version = "2.0" }
rustls-pki-types = { default-features = false, optional = true, version = "1.0" }
serde = { default-features = false, features = ["alloc", "derive"], optional = true, version = "1.0" }
serde_json = { default-features = false, features = ["alloc"], optional = true, version = "1.0" }
serde_urlencoded = { default-features = false, optional = true, version = "0.7" }
simdutf8 = { default-features = false, features = ["aarch64_neon"], optional = true, version = "0.1" }
tokio = { default-features = false, features = ["io-util", "net", "rt", "sync", "time"], optional = true, version = "1.0" }
tokio-rustls = { default-features = false, features = ["ring", "tls12"], optional = true, version = "0.26" }
tracing = { default-features = false, features = ["attributes"], optional = true, version = "0.1" }
tracing-subscriber = { default-features = false, features = ["env-filter", "fmt"], optional = true, version = "0.3" }
tracing-tree = { default-features = false, optional = true, version = "0.4" }
uuid = { default-features = false, optional = true, version = "1.0" }
webpki-roots = { default-features = false, optional = true, version = "1.0" }
wtx-macros = { default-features = false, optional = true, path = "../wtx-macros", version = "0.5" }

aes-gcm = { default-features = false, features = ["aes"], optional = true, version = "0.11.0-rc.0" }
argon2 = { default-features = false, optional = true, version = "0.6.0-rc.0" }
crypto-common = { default-features = false, optional = true, version = "0.2.0-rc.3" }
digest = { default-features = false, features = ["mac"], optional = true, version = "0.11.0-rc.0" }
hmac = { default-features = false, optional = true, version = "0.13.0-rc.0" }
rsa = { default-features = false, optional = true, version = "0.10.0-rc.5" }
sha1 = { default-features = false, optional = true, version = "0.11.0-rc.0" }
sha2 = { default-features = false, optional = true, version = "0.11.0-rc.0" }
spki = { default-features = false, optional = true, version = "0.8.0-rc.4" }

[dev-dependencies]
tokio = { default-features = false, features = ["rt-multi-thread"], version = "1.0" }
wtx = { default-features = false, features = ["executor"], path = "." }

[features]
32-tuple-impls = []
arbitrary = ["dep:arbitrary", "std"]
borsh = ["borsh/std", "std"]
client-api-framework = []
crossbeam-channel = ["crossbeam-channel/std", "std"]
database = []
default = []
executor = ["std"]
foldhash = ["dep:foldhash", "hashbrown?/default-hasher"]
grpc = []
grpc-client = ["grpc", "http-client-pool"]
grpc-server = ["grpc", "http-server-framework"]
http = []
http-client-pool = ["http2", "pool", "std"]
http-cookie = ["http"]
http-cookie-secure = ["aes-gcm", "base64", "digest", "http-cookie"]
http-server-framework = ["http2"]
http-session = ["http-cookie-secure", "serde_json"]
http2 = ["foldhash", "hashbrown", "http"]
loom = ["dep:loom", "std"]
macros = ["dep:wtx-macros"]
mysql = ["database", "digest", "foldhash", "hashbrown", "rand-compat", "rsa/encoding", "spki", "sha1", "sha2"]
nightly = []
optimization = ["memchr", "simdutf8"]
pool = []
portable-atomic-util = ["portable-atomic", "dep:portable-atomic-util"]
postgres = ["base64", "crypto-common", "database", "digest", "foldhash", "hashbrown", "hmac", "sha2"]
quick-protobuf = ["quick-protobuf/std", "std"]
rand-compat = ["rand_core"]
rustls = ["dep:rustls", "rustls-pki-types"]
schema-manager = ["database"]
schema-manager-dev = ["schema-manager"]
secret = ["aes-gcm", "libc", "sha2", "std"]
serde_json = ["serde", "serde_json/std", "std"]
serde_urlencoded = ["serde", "dep:serde_urlencoded", "std"]
std = []
tokio = ["std", "dep:tokio"]
tokio-rustls = ["ring", "rustls", "rustls-pemfile/std", "rustls-pki-types", "tokio", "dep:tokio-rustls", "tokio-rustls/ring"]
tracing-tree = ["std", "dep:tracing-tree"]
web-socket = ["http"]
web-socket-handshake = ["base64", "httparse", "sha1", "web-socket"]

_async-tests = ["tokio/macros", "tokio/net", "tokio/rt-multi-thread", "tokio/time"]
_bench = []
_hack = ["embassy-net?/medium-ip", "embassy-net?/proto-ipv4"] # Crate must not decide for downstream users
_integration-tests = ["serde_json?/raw_value"]
_tracing-tree = ["tracing", "tracing-subscriber", "tracing-tree"]

[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(kani)'] }

[package]
authors = ["Caio Fernandes <c410.f3r@gmail.com>"]
categories = ["asynchronous", "database", "network-programming", "no-std", "web-programming"]
description = "A collection of different transport implementations and related tools focused primarily on web technologies."
documentation = "https://docs.rs/wtx"
edition = "2024"
homepage = "https://c410-f3r.github.io/wtx"
keywords = ["api", "database", "http", "tls", "websocket"]
license = "MPL-2.0"
name = "wtx"
readme = "README.md"
repository = "https://github.com/c410-f3r/wtx"
rust-version = "1.89"
version = "0.36.1"

[package.metadata.docs.rs]
all-features = true
